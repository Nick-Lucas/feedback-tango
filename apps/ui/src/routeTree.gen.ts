/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as authedRouteRouteImport } from './routes/(authed)/route'
import { Route as publicIndexRouteImport } from './routes/(public)/index'
import { Route as ApiAuthRouteImport } from './routes/api/auth'
import { Route as signinSigninRouteImport } from './routes/(signin)/signin'
import { Route as authedProjectsIndexRouteImport } from './routes/(authed)/projects.index'
import { Route as authedProjectsProjectIdRouteImport } from './routes/(authed)/projects.$projectId'
import { Route as signinCliSigninIndexRouteImport } from './routes/(signin)/cli.signin.index'
import { Route as authedProjectsProjectIdIndexRouteImport } from './routes/(authed)/projects.$projectId.index'
import { Route as authedProjectsProjectIdFeaturesRouteImport } from './routes/(authed)/projects.$projectId.features'
import { Route as authedProjectsProjectIdConfigRouteImport } from './routes/(authed)/projects.$projectId.config'
import { Route as authedProjectsProjectIdRawFeedbackRouteRouteImport } from './routes/(authed)/projects.$projectId.raw-feedback/route'
import { Route as signinCliSigninCompleteIndexRouteImport } from './routes/(signin)/cli.signin.complete.index'
import { Route as authedProjectsProjectIdFeaturesIndexRouteImport } from './routes/(authed)/projects.$projectId.features.index'
import { Route as authedProjectsProjectIdFeedbackFeedbackIdRouteImport } from './routes/(authed)/projects.$projectId.feedback.$feedbackId'
import { Route as authedProjectsProjectIdFeaturesFeatureIdRouteImport } from './routes/(authed)/projects.$projectId.features.$featureId'

const authedRouteRoute = authedRouteRouteImport.update({
  id: '/(authed)',
  getParentRoute: () => rootRouteImport,
} as any)
const publicIndexRoute = publicIndexRouteImport.update({
  id: '/(public)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthRoute = ApiAuthRouteImport.update({
  id: '/api/auth',
  path: '/api/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const signinSigninRoute = signinSigninRouteImport.update({
  id: '/(signin)/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const authedProjectsIndexRoute = authedProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => authedRouteRoute,
} as any)
const authedProjectsProjectIdRoute = authedProjectsProjectIdRouteImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => authedRouteRoute,
} as any)
const signinCliSigninIndexRoute = signinCliSigninIndexRouteImport.update({
  id: '/(signin)/cli/signin/',
  path: '/cli/signin/',
  getParentRoute: () => rootRouteImport,
} as any)
const authedProjectsProjectIdIndexRoute =
  authedProjectsProjectIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => authedProjectsProjectIdRoute,
  } as any)
const authedProjectsProjectIdFeaturesRoute =
  authedProjectsProjectIdFeaturesRouteImport.update({
    id: '/features',
    path: '/features',
    getParentRoute: () => authedProjectsProjectIdRoute,
  } as any)
const authedProjectsProjectIdConfigRoute =
  authedProjectsProjectIdConfigRouteImport.update({
    id: '/config',
    path: '/config',
    getParentRoute: () => authedProjectsProjectIdRoute,
  } as any)
const authedProjectsProjectIdRawFeedbackRouteRoute =
  authedProjectsProjectIdRawFeedbackRouteRouteImport.update({
    id: '/raw-feedback',
    path: '/raw-feedback',
    getParentRoute: () => authedProjectsProjectIdRoute,
  } as any)
const signinCliSigninCompleteIndexRoute =
  signinCliSigninCompleteIndexRouteImport.update({
    id: '/(signin)/cli/signin/complete/',
    path: '/cli/signin/complete/',
    getParentRoute: () => rootRouteImport,
  } as any)
const authedProjectsProjectIdFeaturesIndexRoute =
  authedProjectsProjectIdFeaturesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => authedProjectsProjectIdFeaturesRoute,
  } as any)
const authedProjectsProjectIdFeedbackFeedbackIdRoute =
  authedProjectsProjectIdFeedbackFeedbackIdRouteImport.update({
    id: '/feedback/$feedbackId',
    path: '/feedback/$feedbackId',
    getParentRoute: () => authedProjectsProjectIdRoute,
  } as any)
const authedProjectsProjectIdFeaturesFeatureIdRoute =
  authedProjectsProjectIdFeaturesFeatureIdRouteImport.update({
    id: '/$featureId',
    path: '/$featureId',
    getParentRoute: () => authedProjectsProjectIdFeaturesRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof publicIndexRoute
  '/signin': typeof signinSigninRoute
  '/api/auth': typeof ApiAuthRoute
  '/projects/$projectId': typeof authedProjectsProjectIdRouteWithChildren
  '/projects': typeof authedProjectsIndexRoute
  '/projects/$projectId/raw-feedback': typeof authedProjectsProjectIdRawFeedbackRouteRoute
  '/projects/$projectId/config': typeof authedProjectsProjectIdConfigRoute
  '/projects/$projectId/features': typeof authedProjectsProjectIdFeaturesRouteWithChildren
  '/projects/$projectId/': typeof authedProjectsProjectIdIndexRoute
  '/cli/signin': typeof signinCliSigninIndexRoute
  '/projects/$projectId/features/$featureId': typeof authedProjectsProjectIdFeaturesFeatureIdRoute
  '/projects/$projectId/feedback/$feedbackId': typeof authedProjectsProjectIdFeedbackFeedbackIdRoute
  '/projects/$projectId/features/': typeof authedProjectsProjectIdFeaturesIndexRoute
  '/cli/signin/complete': typeof signinCliSigninCompleteIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof publicIndexRoute
  '/signin': typeof signinSigninRoute
  '/api/auth': typeof ApiAuthRoute
  '/projects': typeof authedProjectsIndexRoute
  '/projects/$projectId/raw-feedback': typeof authedProjectsProjectIdRawFeedbackRouteRoute
  '/projects/$projectId/config': typeof authedProjectsProjectIdConfigRoute
  '/projects/$projectId': typeof authedProjectsProjectIdIndexRoute
  '/cli/signin': typeof signinCliSigninIndexRoute
  '/projects/$projectId/features/$featureId': typeof authedProjectsProjectIdFeaturesFeatureIdRoute
  '/projects/$projectId/feedback/$feedbackId': typeof authedProjectsProjectIdFeedbackFeedbackIdRoute
  '/projects/$projectId/features': typeof authedProjectsProjectIdFeaturesIndexRoute
  '/cli/signin/complete': typeof signinCliSigninCompleteIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(authed)': typeof authedRouteRouteWithChildren
  '/(signin)/signin': typeof signinSigninRoute
  '/api/auth': typeof ApiAuthRoute
  '/(public)/': typeof publicIndexRoute
  '/(authed)/projects/$projectId': typeof authedProjectsProjectIdRouteWithChildren
  '/(authed)/projects/': typeof authedProjectsIndexRoute
  '/(authed)/projects/$projectId/raw-feedback': typeof authedProjectsProjectIdRawFeedbackRouteRoute
  '/(authed)/projects/$projectId/config': typeof authedProjectsProjectIdConfigRoute
  '/(authed)/projects/$projectId/features': typeof authedProjectsProjectIdFeaturesRouteWithChildren
  '/(authed)/projects/$projectId/': typeof authedProjectsProjectIdIndexRoute
  '/(signin)/cli/signin/': typeof signinCliSigninIndexRoute
  '/(authed)/projects/$projectId/features/$featureId': typeof authedProjectsProjectIdFeaturesFeatureIdRoute
  '/(authed)/projects/$projectId/feedback/$feedbackId': typeof authedProjectsProjectIdFeedbackFeedbackIdRoute
  '/(authed)/projects/$projectId/features/': typeof authedProjectsProjectIdFeaturesIndexRoute
  '/(signin)/cli/signin/complete/': typeof signinCliSigninCompleteIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/api/auth'
    | '/projects/$projectId'
    | '/projects'
    | '/projects/$projectId/raw-feedback'
    | '/projects/$projectId/config'
    | '/projects/$projectId/features'
    | '/projects/$projectId/'
    | '/cli/signin'
    | '/projects/$projectId/features/$featureId'
    | '/projects/$projectId/feedback/$feedbackId'
    | '/projects/$projectId/features/'
    | '/cli/signin/complete'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/api/auth'
    | '/projects'
    | '/projects/$projectId/raw-feedback'
    | '/projects/$projectId/config'
    | '/projects/$projectId'
    | '/cli/signin'
    | '/projects/$projectId/features/$featureId'
    | '/projects/$projectId/feedback/$feedbackId'
    | '/projects/$projectId/features'
    | '/cli/signin/complete'
  id:
    | '__root__'
    | '/(authed)'
    | '/(signin)/signin'
    | '/api/auth'
    | '/(public)/'
    | '/(authed)/projects/$projectId'
    | '/(authed)/projects/'
    | '/(authed)/projects/$projectId/raw-feedback'
    | '/(authed)/projects/$projectId/config'
    | '/(authed)/projects/$projectId/features'
    | '/(authed)/projects/$projectId/'
    | '/(signin)/cli/signin/'
    | '/(authed)/projects/$projectId/features/$featureId'
    | '/(authed)/projects/$projectId/feedback/$feedbackId'
    | '/(authed)/projects/$projectId/features/'
    | '/(signin)/cli/signin/complete/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authedRouteRoute: typeof authedRouteRouteWithChildren
  signinSigninRoute: typeof signinSigninRoute
  ApiAuthRoute: typeof ApiAuthRoute
  publicIndexRoute: typeof publicIndexRoute
  signinCliSigninIndexRoute: typeof signinCliSigninIndexRoute
  signinCliSigninCompleteIndexRoute: typeof signinCliSigninCompleteIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(authed)': {
      id: '/(authed)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth': {
      id: '/api/auth'
      path: '/api/auth'
      fullPath: '/api/auth'
      preLoaderRoute: typeof ApiAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(signin)/signin': {
      id: '/(signin)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof signinSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authed)/projects/': {
      id: '/(authed)/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof authedProjectsIndexRouteImport
      parentRoute: typeof authedRouteRoute
    }
    '/(authed)/projects/$projectId': {
      id: '/(authed)/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof authedProjectsProjectIdRouteImport
      parentRoute: typeof authedRouteRoute
    }
    '/(signin)/cli/signin/': {
      id: '/(signin)/cli/signin/'
      path: '/cli/signin'
      fullPath: '/cli/signin'
      preLoaderRoute: typeof signinCliSigninIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authed)/projects/$projectId/': {
      id: '/(authed)/projects/$projectId/'
      path: '/'
      fullPath: '/projects/$projectId/'
      preLoaderRoute: typeof authedProjectsProjectIdIndexRouteImport
      parentRoute: typeof authedProjectsProjectIdRoute
    }
    '/(authed)/projects/$projectId/features': {
      id: '/(authed)/projects/$projectId/features'
      path: '/features'
      fullPath: '/projects/$projectId/features'
      preLoaderRoute: typeof authedProjectsProjectIdFeaturesRouteImport
      parentRoute: typeof authedProjectsProjectIdRoute
    }
    '/(authed)/projects/$projectId/config': {
      id: '/(authed)/projects/$projectId/config'
      path: '/config'
      fullPath: '/projects/$projectId/config'
      preLoaderRoute: typeof authedProjectsProjectIdConfigRouteImport
      parentRoute: typeof authedProjectsProjectIdRoute
    }
    '/(authed)/projects/$projectId/raw-feedback': {
      id: '/(authed)/projects/$projectId/raw-feedback'
      path: '/raw-feedback'
      fullPath: '/projects/$projectId/raw-feedback'
      preLoaderRoute: typeof authedProjectsProjectIdRawFeedbackRouteRouteImport
      parentRoute: typeof authedProjectsProjectIdRoute
    }
    '/(signin)/cli/signin/complete/': {
      id: '/(signin)/cli/signin/complete/'
      path: '/cli/signin/complete'
      fullPath: '/cli/signin/complete'
      preLoaderRoute: typeof signinCliSigninCompleteIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authed)/projects/$projectId/features/': {
      id: '/(authed)/projects/$projectId/features/'
      path: '/'
      fullPath: '/projects/$projectId/features/'
      preLoaderRoute: typeof authedProjectsProjectIdFeaturesIndexRouteImport
      parentRoute: typeof authedProjectsProjectIdFeaturesRoute
    }
    '/(authed)/projects/$projectId/feedback/$feedbackId': {
      id: '/(authed)/projects/$projectId/feedback/$feedbackId'
      path: '/feedback/$feedbackId'
      fullPath: '/projects/$projectId/feedback/$feedbackId'
      preLoaderRoute: typeof authedProjectsProjectIdFeedbackFeedbackIdRouteImport
      parentRoute: typeof authedProjectsProjectIdRoute
    }
    '/(authed)/projects/$projectId/features/$featureId': {
      id: '/(authed)/projects/$projectId/features/$featureId'
      path: '/$featureId'
      fullPath: '/projects/$projectId/features/$featureId'
      preLoaderRoute: typeof authedProjectsProjectIdFeaturesFeatureIdRouteImport
      parentRoute: typeof authedProjectsProjectIdFeaturesRoute
    }
  }
}

interface authedProjectsProjectIdFeaturesRouteChildren {
  authedProjectsProjectIdFeaturesFeatureIdRoute: typeof authedProjectsProjectIdFeaturesFeatureIdRoute
  authedProjectsProjectIdFeaturesIndexRoute: typeof authedProjectsProjectIdFeaturesIndexRoute
}

const authedProjectsProjectIdFeaturesRouteChildren: authedProjectsProjectIdFeaturesRouteChildren =
  {
    authedProjectsProjectIdFeaturesFeatureIdRoute:
      authedProjectsProjectIdFeaturesFeatureIdRoute,
    authedProjectsProjectIdFeaturesIndexRoute:
      authedProjectsProjectIdFeaturesIndexRoute,
  }

const authedProjectsProjectIdFeaturesRouteWithChildren =
  authedProjectsProjectIdFeaturesRoute._addFileChildren(
    authedProjectsProjectIdFeaturesRouteChildren,
  )

interface authedProjectsProjectIdRouteChildren {
  authedProjectsProjectIdRawFeedbackRouteRoute: typeof authedProjectsProjectIdRawFeedbackRouteRoute
  authedProjectsProjectIdConfigRoute: typeof authedProjectsProjectIdConfigRoute
  authedProjectsProjectIdFeaturesRoute: typeof authedProjectsProjectIdFeaturesRouteWithChildren
  authedProjectsProjectIdIndexRoute: typeof authedProjectsProjectIdIndexRoute
  authedProjectsProjectIdFeedbackFeedbackIdRoute: typeof authedProjectsProjectIdFeedbackFeedbackIdRoute
}

const authedProjectsProjectIdRouteChildren: authedProjectsProjectIdRouteChildren =
  {
    authedProjectsProjectIdRawFeedbackRouteRoute:
      authedProjectsProjectIdRawFeedbackRouteRoute,
    authedProjectsProjectIdConfigRoute: authedProjectsProjectIdConfigRoute,
    authedProjectsProjectIdFeaturesRoute:
      authedProjectsProjectIdFeaturesRouteWithChildren,
    authedProjectsProjectIdIndexRoute: authedProjectsProjectIdIndexRoute,
    authedProjectsProjectIdFeedbackFeedbackIdRoute:
      authedProjectsProjectIdFeedbackFeedbackIdRoute,
  }

const authedProjectsProjectIdRouteWithChildren =
  authedProjectsProjectIdRoute._addFileChildren(
    authedProjectsProjectIdRouteChildren,
  )

interface authedRouteRouteChildren {
  authedProjectsProjectIdRoute: typeof authedProjectsProjectIdRouteWithChildren
  authedProjectsIndexRoute: typeof authedProjectsIndexRoute
}

const authedRouteRouteChildren: authedRouteRouteChildren = {
  authedProjectsProjectIdRoute: authedProjectsProjectIdRouteWithChildren,
  authedProjectsIndexRoute: authedProjectsIndexRoute,
}

const authedRouteRouteWithChildren = authedRouteRoute._addFileChildren(
  authedRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  authedRouteRoute: authedRouteRouteWithChildren,
  signinSigninRoute: signinSigninRoute,
  ApiAuthRoute: ApiAuthRoute,
  publicIndexRoute: publicIndexRoute,
  signinCliSigninIndexRoute: signinCliSigninIndexRoute,
  signinCliSigninCompleteIndexRoute: signinCliSigninCompleteIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
